openapi: 3.1.0
info:
  title: ISCC Generator
  version: 0.3.7
  summary: Create Internation Standard Content Codes
  description: '# About this spec

    **DEPRECATED:** This API spec has been deprecated! For latest API see https://iscc.io/docs

    The ISCC Generator API is an implementation-agnostig API for creating ISCCs from media
    assets.


    - For use and implementation by ISCC service providers

    - For use by Web and GUI-based applications via REST client

    '
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: ISCC Foundation
  x-logo:
    url: https://schema.iscc.codes/images/iscc-logo-blue.png
servers:
- url: http://localhost:8000
  description: develop
- url: https://api-test.iscc.id/api
  description: test
tags:
- name: iscc
- name: media
- name: nft
- name: task
paths:
  /iscc_code:
    post:
      summary: Generate ISCC-CODE
      tags:
      - iscc
      responses:
        '200':
          $ref: '#/components/responses/IsccGeneratorResponse'
        '202':
          $ref: '#/components/responses/TaskResponse'
        '400':
          $ref: '#/components/responses/MessageResponse'
        '500':
          $ref: '#/components/responses/MessageResponse'
      operationId: post-iscc-code
      requestBody:
        $ref: '#/components/requestBodies/IsccGenerateRequest'
      description: Generate an ISCC-CODE from `source_file` or from the content hosted at
        `source_url`.
  /iscc_code/{iscc_code}:
    parameters:
    - schema:
        type: string
      name: iscc_code
      in: path
      required: true
    get:
      summary: Get ISCC-CODE
      tags:
      - iscc
      responses:
        '200':
          $ref: '#/components/responses/IsccGeneratorResponse'
        '404':
          description: Not Found
      operationId: get-iscc-code
      description: Get ISCC Metadata for an ISCC-CODE
    delete:
      summary: Delete ISCC-CODE
      tags:
      - iscc
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: delete-iscc-code
      description: Delete ISCC-CODE
  /media:
    post:
      summary: Upload Media
      tags:
      - media
      responses:
        '201':
          $ref: '#/components/responses/MediaUploadResponse'
        '400':
          $ref: '#/components/responses/MessageResponse'
        '500':
          $ref: '#/components/responses/MessageResponse'
      operationId: post-media
      description: Upload Media
      requestBody:
        $ref: '#/components/requestBodies/MediaUploadRequest'
  /media/{media_id}:
    parameters:
    - schema:
        type: string
      name: media_id
      in: path
      required: true
    get:
      summary: Download Media
      tags:
      - media
      operationId: get-media
      responses:
        '200':
          $ref: '#/components/responses/MediaDownloadResponse'
      description: Download Media
    delete:
      summary: Delete Media
      tags:
      - media
      responses:
        '200':
          description: OK
      operationId: delete-media-media_id
      description: Delete Media
  /media/metadata/{media_id}:
    parameters:
    - schema:
        type: string
      name: media_id
      in: path
      required: true
    get:
      summary: Get Metadata
      tags:
      - media
      responses:
        '200':
          $ref: '#/components/responses/MediaEmbeddedMetadataResponse'
      operationId: get-media-metadata
      description: Get Metadata
    post:
      summary: Embed Metadata
      tags:
      - media
      responses:
        '200':
          $ref: '#/components/responses/MediaIDResponse'
      operationId: embed-metadata
      description: Update Metadata
      requestBody:
        $ref: '#/components/requestBodies/MediaEmbedRequest'
  /nft:
    post:
      summary: Create NFT
      tags:
      - nft
      responses:
        '200':
          $ref: '#/components/responses/NftGeneratorResponse'
      operationId: post-nft
      description: Create NFT
      requestBody:
        $ref: '#/components/requestBodies/NftGenerateRequest'
  /nft/{nft_id}:
    parameters:
    - schema:
        type: string
      name: nft_id
      in: path
      required: true
    get:
      summary: Get NFT
      tags:
      - nft
      responses:
        '200':
          $ref: '#/components/responses/NftGeneratorResponse'
      operationId: get-nft
      description: Get NFT
    delete:
      summary: Delete NFT
      tags:
      - nft
      responses:
        '200':
          description: OK
      operationId: delete-nft
      description: Delete NFT
  /nft/freeze:
    post:
      summary: Freeze NFT
      tags:
      - nft
      responses:
        '200':
          $ref: '#/components/responses/NftFrozenResponse'
        '400':
          $ref: '#/components/responses/MessageResponse'
      operationId: post-freeze
      description: Freeze NFT Metadata
      requestBody:
        $ref: '#/components/requestBodies/NftFreezeRequest'
    parameters: []
  /task/{task_id}:
    parameters:
    - schema:
        type: string
      name: task_id
      in: path
      required: true
    get:
      summary: Get Task
      tags:
      - task
      responses:
        '200':
          $ref: '#/components/responses/TaskResponse'
        '404':
          description: Not Found
      operationId: get-task
      description: Get status of an ISCC processing task.
components:
  schemas:
    MediaUpload:
      title: MediaUpload
      description: Media Upload
      type: object
      properties:
        source_file:
          type: string
          format: binary
          description: The file used for generating the ISCC.
          writeOnly: true
        source_url:
          type: string
          format: uri
          description: URL of file used for generating the ISCC.
          example: https://picsum.photos/200/300.jpg
    MediaID:
      title: MediaID
      type: object
      properties:
        media_id:
          type: string
          example: 05VJUVTH3DCP6
          minLength: 13
          maxLength: 13
          description: Media file ID
      description: Media-ID
    MediaDownload:
      type: string
      title: MediaDownload
      format: binary
      description: Media Download
      examples:
      - string
      readOnly: true
    MediaEmbeddedMetadata:
      title: MediaEmbeddedMetadata
      description: Media Metadata
      allOf:
      - $ref: '#/components/schemas/IsccExtraMetadata'
      - $ref: '#/components/schemas/IsccBasicMetadata'
    IsccMetadata:
      title: IsccMetadata
      type: object
      description: ISCC Metadata
      properties:
        '@context':
          type: string
          format: uri
          description: The [JSON-LD](https://json-ld.org/) Context URI for ISCC metadata.
          default: http://purl.org/iscc/context/0.3.2.jsonld
          readOnly: true
        '@type':
          type: string
          enum:
          - AudioObject
          - ImageObject
          - CreativeWork
          - TextDigitalDocument
          - VideoObject
          description: The type of digital content according to schema.org classes.
          example: ImageObject
          readOnly: true
        $schema:
          type: string
          format: uri
          description: The [JSON Schema](https://json-schema.org/) URI of the ISCC metadata
            schema.
          default: http://purl.org/iscc/schema/0.3.2.json
          readOnly: true
        iscc:
          type: string
          description: An **ISCC-CODE** in canonical representation.
          example: ISCC:KACYPXW445FTYNJ3CYSXHAFJMA2HUWULUNRFE3BLHRSCXYH2M5AEGQY
          pattern: ^ISCC:[A-Z2-7]{10,73}$
          minLength: 15
          maxLength: 73
        media_id:
          type: string
          description: Vendor specific internal identifier for media file.
          example: 05VJUVTH3DCP6
          minLength: 13
          maxLength: 13
        name:
          type: string
          description: The title or name of the intangible creation manifested by the identified
            *digital content*.
          maxLength: 128
          example: The Secret Adversary
        description:
          type: string
          maxLength: 4096
          example: A 2001 fantasy film directed by Chris Columbus and distributed by Warner
            Bros.
          description: Description of the *digital content* identified by the **ISCC**.
        meta:
          type: string
          description: Extended metadata, wrapped in a Data-URL string.
          maxLength: 16384
          example: data:application/json;charset=utf-8;base64,eyJleHRlbmRlZCI6Im1ldGFkYXRhIn0=
        creator:
          type: string
          description: An entity primarily responsible for making the resource.
          example: Agatha Christie
        license:
          type: string
          format: uri
          example: https://example.com/license-terms-for-this-item
          description: URL of license for the digital content.
        acquire:
          type: string
          description: URL for acquiring a license for the item.
          format: uri
          example: https://example.com/buy-this-item-here
        mode:
          type: string
          enum:
          - text
          - image
          - audio
          - video
          - mixed
          example: video
          description: The perceptual mode used to create the ISCC-CODE.
          readOnly: true
        mediatype:
          type: string
          example: image/png
          description: The [IANA Media Type](https://www.iana.org/assignments/media-types/media-types.xhtml)
            (MIME type) of the referenced content.
        filename:
          type: string
          description: Filename of the referenced **digital content** (automatically used
            as fallback if the `name` field was not specified for ISCC processing)
          example: some-file.png
          readOnly: true
        filesize:
          type: integer
          description: File size of media asset in number of bytes.
          example: 16896
          readOnly: true
        characters:
          type: integer
          description: Number of text characters (code points after Unicode normalization)
          example: 55689
          readOnly: true
        pages:
          type: integer
          description: Number of pages (for paged documents only)
          example: 77
          readOnly: true
        language:
          description: Main language of content [BCP 47](https://tools.ietf.org/search/bcp47).
          example: en-US
          type: string
        fps:
          type: number
          description: Frames per second of video assets.
          format: float
          example: 24
          readOnly: true
        width:
          type: integer
          description: Width of visual media in number of pixels.
          format: int32
          example: 640
          readOnly: true
        height:
          type: integer
          description: Height of visual media in number of pixels.
          format: int32
          example: 480
          readOnly: true
        duration:
          type: integer
          description: Duration of audio-visual media in secondes.
          example: 67
          readOnly: true
        generator:
          type: string
          description: Name and version of the software that generated the ISCC
          readOnly: true
        created:
          description: Datetime the ISCC was created for the item.
          type: string
          format: date-time
          readOnly: true
        metahash:
          type: string
          minLength: 40
          example: f01551220b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9
          description: A [Multiformats](https://multiformats.io) multihash or IPFS CIDv1 of
            the ISCC seed metadata. The hash is created from `name` and `description` fields
            or `meta` if supplied.
          readOnly: true
        datahash:
          type: string
          minLength: 40
          example: bdyqk6e2jxh27tingubae32rw3teutg6lexe23qisw7gjve6k4qpteyq
          description: A [Multihash](https://multiformats.io/multihash/) of the *digital content*
            (default blake3).
          readOnly: true
        tophash:
          type: string
          minLength: 40
          example: bdyqnosmb56tqudeibogyygmf2b25xs7wpg4zux4zcts2v6llqmnj4ja
          description: A [Multihash](https://multiformats.io/multihash/) of the concatenation
            (binding) of metahash and datahash.
          readOnly: true
        thumbnail:
          type: string
          description: URI for a user-presentable image that serves as a preview of the digital
            content. The URI may be a Data-URL RFC2397.
          format: uri
          example: https://picsum.photos/200/300.jpg
    NftMetadata:
      title: NftMetadata
      type: object
      description: NFT Metadata
      properties:
        '@context':
          type: string
          format: uri
          example: http://purl.org/iscc/context
          description: The [JSON-LD](https://json-ld.org/) Context URI for ISCC metadata.
          readOnly: true
        '@type':
          type: string
          enum:
          - AudioObject
          - ImageObject
          - CreativeWork
          - TextDigitalDocument
          - VideoObject
          description: The type of digital content according to schema.org classes.
          example: ImageObject
          readOnly: true
        $schema:
          type: string
          example: http://purl.org/iscc/schema
          format: uri
          description: The [JSON Schema](https://json-schema.org/) URI of the ISCC metadata
            schema.
          readOnly: true
        iscc:
          type: string
          description: The **ISCC-ID** of the digital content.
          example: ISCC:MEAJU5AXCPOIOYFL
          pattern: ^ISCC:[A-Z2-7]{10,73}$
        name:
          type: string
          description: The title or name of the intangible creation manifested by the identified
            *digital content*.
          maxLength: 128
          example: The Secret Adversary
        description:
          type: string
          maxLength: 4096
          example: A 2001 fantasy film directed by Chris Columbus and distributed by Warner
            Bros.
          description: Description of the *digital content* identified by the **ISCC**.
        image:
          type: string
          format: uri
          description: URL of the actual digital content represented by the NFT or a preview
            of it if animation_url is provided.
          example: https://picsum.photos/200/300.jpg
        animation_url:
          type: string
          format: uri
          description: URL of the actual digital content (video, audio ...)
        attributes:
          type: array
          description: Attributes of the NFT artwork. These attributes will show up on NFT
            marketplaces.
          example:
          - trait_type: METAL
            value: SILVER
          - display_type: number
            trait_type: GENERATION
            value: 1
          items:
            type: object
        properties:
          type: object
          description: Arbitrary properties. Values may be strings, numbers, object or arrays.
            Properties defined here may show up on NFT marketplaces. See [ERC-1155](https://eips.ethereum.org/EIPS/eip-1155#metadata)
        external_url:
          type: string
          format: uri
          description: This is the URL that will appear below the asset's image on some NFT
            Marketplaces and will allow users to leave the site and view the item on your
            site.
          example: https://example.com/link-to-here-from-marketplace
        license:
          type: string
          format: uri
          description: URI of license for the identified digital content.
        original:
          type: boolean
          description: Whether the signee of the declaring transaction claims to be the original
            creator of the work manifested by the identified digital content.
        redirect:
          type: string
          format: uri
          description: URL to which an ISCC resolver should redirect the ISCC-ID. **Supports
            URI template `(iscc-id)`**
          example: https://example.com/redirect-here-for-iscc-id
        verifications:
          type: array
          description: A list of self-verifications. Self-verifications are public URLs under
            the account/authority of the signee. The verification URL must respond to a GET
            request with text that contains a multihash of the ISCC declaration signees wallet
            address in the format of `verify:<multihash-of-wallet-address>:verify`.
          example:
          - https://twitter.com/titusz/status/1490104312051257347
          items:
            type: string
            example: https://twitter.com/titusz/status/1490104312051257347
            format: uri
    NftPackage:
      title: NftPackage
      type: object
      description: NFT Package
      properties:
        nft_id:
          type: string
        nft_metadata:
          $ref: '#/components/schemas/NftMetadata'
        nft_image:
          type: string
          format: uri
        nft_animation:
          type: string
          format: uri
        iscc_code:
          type: string
          description: An **ISCC-CODE** in canonical representation.
          example: ISCC:KACYPXW445FTYNJ3CYSXHAFJMA2HUWULUNRFE3BLHRSCXYH2M5AEGQY
          pattern: ^ISCC:[A-Z2-7]{10,73}$
          minLength: 15
          maxLength: 73
      required:
      - nft_id
    IsccBasicMetadata:
      title: IsccBasicMetadata
      type: object
      properties:
        name:
          type: string
          maxLength: 128
          description: The title or name of the creation manifested by digital content.
          example: The Secret Adversary
        description:
          type: string
          maxLength: 4096
          description: Description of the digital content.
          example: A 2001 fantasy film directed by Chris Columbus and distributed by Warner
            Bros.
        meta:
          type: string
          maxLength: 16384
          description: Subject, industry, or use-case specific metadata. (Encoded as JSON
            string or Data-URL)
          example: data:application/json;charset=utf-8;base64,eyJleHRlbmRlZCI6Im1ldGFkYXRhIn0=
      description: Basic ISCC Metadata
    TaskStatus:
      title: TaskStatus
      type: object
      properties:
        task_id:
          type: string
          example: 95dcc4952deb409e81d16ab7a1338648
          description: Unique identifier of the task.
          readOnly: true
        started:
          type: string
          format: date-time
          example: '2021-01-21T17:32:28Z'
        stopped:
          type: string
          format: date-time
          example: '2021-01-21T17:34:36Z'
          readOnly: true
        success:
          type: boolean
        result:
          type: string
          example: ISCC:KACYPXW445FTYNJ3CYSXHAFJMA2HUWULUNRFE3BLHRSCXYH2M5AEGQY
      required:
      - task_id
      description: Status of an ISCC processing task
    Message:
      title: Message
      type: object
      description: Informational message to the client
      properties:
        detail:
          type: string
          description: Informational message about the request.
          example: Either source_file or source_url must be provided.
          readOnly: true
    NftFrozen:
      title: NftFrozen
      type: object
      description: Frozen NFT
      properties:
        token_id_hex:
          type: string
          description: 'NFT Token-ID (uint256 encoded as hex). '
          example: b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9
        token_id_num:
          type: string
          example: '83814198383102558219731078260892729932246618004265700685467928187377105751529'
          description: NFT Token-ID (uint256 digits as string)
        metadata_ipfs_uri:
          type: string
          description: 'IPFS-URI of NFT metadata in base16 (hex) encoding. '
          example: ipfs://f01551220b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9
          format: uri
        metadata_ipfs_payload:
          type: string
          format: byte
          example: aGVsbG8gd29ybGQ=
          description: JCS serialized and base64 encoded NFT metadata for publishing to IPFS
    IsccExtraMetadata:
      title: IsccExtraMetadata
      type: object
      description: Additional embeddable metadata
      properties:
        creator:
          type: string
          description: An entity primarily responsible for making the resource.
          example: Agatha Christie
        license:
          type: string
          format: uri
          example: https://example.com/license-terms-for-this-item
          description: URL of license for the digital content.
        acquire:
          type: string
          description: URL for acquiring a license for the item.
          format: uri
          example: https://example.com/buy-this-item-here
  requestBodies:
    MediaUploadRequest:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MediaUpload'
      description: Upload Media
    MediaEmbedRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MediaEmbeddedMetadata'
      description: Embed Metadata
    IsccGenerateRequest:
      content:
        multipart/form-data:
          schema:
            allOf:
            - $ref: '#/components/schemas/MediaEmbeddedMetadata'
            - $ref: '#/components/schemas/MediaUpload'
      description: Generate ISCC-CODE
    NftGenerateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              media_id_image:
                type: string
                description: The `media_id` of the image for the NFT
                example: 05VJUVTH3DCP6
                minLength: 13
                maxLength: 13
              media_id_animation:
                type: string
                description: Optional `media_id` of an animation for the NFT
                example: 05VJUVTH3DCP6
                minLength: 13
                maxLength: 13
              attributes:
                description: Similar to properties but as an array of objects. These attributes
                  will show up on some NFT marketplaces.
                type: array
                items:
                  type: object
              properties:
                type: object
                description: Arbitrary properties. Values may be strings, numbers, object
                  or arrays. Properties defined here may show up on NFT marketplaces. See
                  [ERC-1155](https://eips.ethereum.org/EIPS/eip-1155#metadata)
              external_url:
                type: string
                format: uri
                description: This is the URL that will appear below the asset's image on some
                  NFT Marketplaces and will allow users to leave the site and view the item
                  on your site.
              chain:
                type: string
                example: POLYGON
                enum:
                - BITCOIN
                - ETHEREUM
                - POLYGON
                description: The blockchain ISCC-CODE declaration.
              wallet:
                type: string
                example: '0xb794f5ea0ba39494ce839613fffba74279579268'
                description: The wallet-address used for ISCC-CODE decleration.
              original:
                type: boolean
                description: The signee of the declaring transaction claims to be the original
                  creator of the work manifested by the identified digital content.
              redirect:
                type: string
                format: uri
                description: URL to which an ISCC resolver should redirect the ISCC-ID. **Supports
                  URI template `(iscc-id)`**
              verifications:
                type: array
                format: uri
                description: A list of self-verifications. Self-verifications are public URLs
                  under the account/authority of the signee. The verification URL must respond
                  to a GET request with text that contains a multihash of the ISCC declaration
                  signees wallet address in the format of `verify:<multihash-of-wallet-address>:verify`.
                items:
                  type: string
                  example: https://twitter.com/titusz/status/1490104312051257347
                  format: uri
            required:
            - media_id_image
      description: ''
    NftFreezeRequest:
      content:
        application/json:
          schema:
            type: object
            description: Any JSON object that can be serialized with JCS canonicaliztion.
      description: NFT Metadata
  responses:
    MediaUploadResponse:
      description: Media-ID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MediaID'
    MediaDownloadResponse:
      description: Media Download
      content:
        application/octet-stream:
          schema:
            $ref: '#/components/schemas/MediaDownload'
    MediaEmbeddedMetadataResponse:
      description: Media Metadata
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MediaEmbeddedMetadata'
    MediaIDResponse:
      description: ID of created media object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MediaID'
    IsccGeneratorResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IsccMetadata'
    NftGeneratorResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NftPackage'
    TaskResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskStatus'
    MessageResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Message'
    NftFrozenResponse:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NftFrozen'
